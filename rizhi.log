2016-11-09 14:56:40 edu.tsinghua.aop.Test.main(Test.java:9) Test.java DEBUG 准备调用方法
2016-11-09 14:56:40 edu.tsinghua.aop.Test.main(Test.java:11) Test.java DEBUG 执行方法
2016-11-09 14:56:40 edu.tsinghua.aop.Test.main(Test.java:13) Test.java DEBUG 调用完成
2016-11-09 15:13:17 org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:112) AbstractEnvironment.java DEBUG Initializing new StandardEnvironment
2016-11-09 15:13:17 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:107) MutablePropertySources.java DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-11-09 15:13:17 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:107) MutablePropertySources.java DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-09 15:13:17 org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:116) AbstractEnvironment.java DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-09 15:13:17 org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:510) AbstractApplicationContext.java INFO Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@d6ee28: startup date [Wed Nov 09 15:13:17 CST 2016]; root of context hierarchy
2016-11-09 15:13:17 org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:112) AbstractEnvironment.java DEBUG Initializing new StandardEnvironment
2016-11-09 15:13:17 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:107) MutablePropertySources.java DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-11-09 15:13:17 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:107) MutablePropertySources.java DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-09 15:13:17 org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:116) AbstractEnvironment.java DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-09 15:13:17 org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:315) XmlBeanDefinitionReader.java INFO Loading XML bean definitions from class path resource [application.xml]
2016-11-09 15:13:49 org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:112) AbstractEnvironment.java DEBUG Initializing new StandardEnvironment
2016-11-09 15:13:49 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:107) MutablePropertySources.java DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-11-09 15:13:49 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:107) MutablePropertySources.java DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-09 15:13:49 org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:116) AbstractEnvironment.java DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-09 15:13:49 org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:510) AbstractApplicationContext.java INFO Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@d6ee28: startup date [Wed Nov 09 15:13:49 CST 2016]; root of context hierarchy
2016-11-09 15:13:49 org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:112) AbstractEnvironment.java DEBUG Initializing new StandardEnvironment
2016-11-09 15:13:49 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:107) MutablePropertySources.java DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-11-09 15:13:49 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:107) MutablePropertySources.java DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-09 15:13:49 org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:116) AbstractEnvironment.java DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-09 15:13:49 org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:315) XmlBeanDefinitionReader.java INFO Loading XML bean definitions from class path resource [applicationContext.xml]
2016-11-09 15:13:49 org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:72) DefaultDocumentLoader.java DEBUG Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2016-11-09 15:13:49 org.springframework.beans.factory.xml.BeansDtdResolver.resolveEntity(BeansDtdResolver.java:73) BeansDtdResolver.java DEBUG Found beans DTD [http://www.springframework.org/dtd/spring-beans.dtd] in classpath: spring-beans.dtd
2016-11-09 15:13:49 org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:106) DefaultBeanDefinitionDocumentReader.java DEBUG Loading bean definitions
2016-11-09 15:13:49 org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:315) XmlBeanDefinitionReader.java INFO Loading XML bean definitions from class path resource [dao.xml]
2016-11-09 15:13:49 org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:72) DefaultDocumentLoader.java DEBUG Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2016-11-09 15:13:49 org.springframework.beans.factory.xml.BeansDtdResolver.resolveEntity(BeansDtdResolver.java:73) BeansDtdResolver.java DEBUG Found beans DTD [http://www.springframework.org/dtd/spring-beans.dtd] in classpath: spring-beans.dtd
2016-11-09 15:13:49 org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:106) DefaultBeanDefinitionDocumentReader.java DEBUG Loading bean definitions
2016-11-09 15:13:49 org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:470) BeanDefinitionParserDelegate.java DEBUG No XML 'id' specified - using 'userDao1' as bean name and [] as aliases
2016-11-09 15:13:49 org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.importBeanDefinitionResource(DefaultBeanDefinitionDocumentReader.java:265) DefaultBeanDefinitionDocumentReader.java DEBUG Imported 1 bean definitions from relative location [dao.xml]
2016-11-09 15:13:49 org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:470) BeanDefinitionParserDelegate.java DEBUG No XML 'id' specified - using 'dataSource' as bean name and [] as aliases
2016-11-09 15:13:49 org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:470) BeanDefinitionParserDelegate.java DEBUG No XML 'id' specified - using 'sessionFactory' as bean name and [] as aliases
2016-11-09 15:13:49 org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:470) BeanDefinitionParserDelegate.java DEBUG No XML 'id' specified - using 'userDao' as bean name and [] as aliases
2016-11-09 15:13:49 org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:470) BeanDefinitionParserDelegate.java DEBUG No XML 'id' specified - using 'userBiz' as bean name and [] as aliases
2016-11-09 15:13:49 org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:470) BeanDefinitionParserDelegate.java DEBUG No XML 'id' specified - using 'loginAct' as bean name and [] as aliases
2016-11-09 15:13:49 org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:470) BeanDefinitionParserDelegate.java DEBUG No XML 'id' specified - using 'biz' as bean name and [] as aliases
2016-11-09 15:13:49 org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:470) BeanDefinitionParserDelegate.java DEBUG No XML 'id' specified - using 'loggerAdvice' as bean name and [] as aliases
2016-11-09 15:13:49 org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:470) BeanDefinitionParserDelegate.java DEBUG No XML 'id' specified - using 'zhenghe' as bean name and [] as aliases
2016-11-09 15:13:49 org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:216) AbstractBeanDefinitionReader.java DEBUG Loaded 9 bean definitions from location pattern [applicationContext.xml]
2016-11-09 15:13:49 org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:540) AbstractApplicationContext.java DEBUG Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@d6ee28: org.springframework.beans.factory.support.DefaultListableBeanFactory@1ba11bc: defining beans [userDao1,dataSource,sessionFactory,userDao,userBiz,loginAct,biz,loggerAdvice,zhenghe]; root of factory hierarchy
2016-11-09 15:13:49 org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:807) AbstractApplicationContext.java DEBUG Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1c56850]
2016-11-09 15:13:49 org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:831) AbstractApplicationContext.java DEBUG Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@12429c]
2016-11-09 15:13:49 org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:596) DefaultListableBeanFactory.java INFO Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1ba11bc: defining beans [userDao1,dataSource,sessionFactory,userDao,userBiz,loginAct,biz,loggerAdvice,zhenghe]; root of factory hierarchy
2016-11-09 15:13:49 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:215) DefaultSingletonBeanRegistry.java DEBUG Creating shared instance of singleton bean 'userDao1'
2016-11-09 15:13:49 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:432) AbstractAutowireCapableBeanFactory.java DEBUG Creating instance of bean 'userDao1'
2016-11-09 15:13:49 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:506) AbstractAutowireCapableBeanFactory.java DEBUG Eagerly caching bean 'userDao1' to allow for resolving potential circular references
2016-11-09 15:13:49 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:460) AbstractAutowireCapableBeanFactory.java DEBUG Finished creating instance of bean 'userDao1'
2016-11-09 15:13:49 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:215) DefaultSingletonBeanRegistry.java DEBUG Creating shared instance of singleton bean 'dataSource'
2016-11-09 15:13:49 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:432) AbstractAutowireCapableBeanFactory.java DEBUG Creating instance of bean 'dataSource'
2016-11-09 15:13:49 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:506) AbstractAutowireCapableBeanFactory.java DEBUG Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2016-11-09 15:13:50 org.springframework.jdbc.datasource.DriverManagerDataSource.setDriverClassName(DriverManagerDataSource.java:153) DriverManagerDataSource.java INFO Loaded JDBC driver: com.mysql.jdbc.Driver
2016-11-09 15:13:50 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:460) AbstractAutowireCapableBeanFactory.java DEBUG Finished creating instance of bean 'dataSource'
2016-11-09 15:13:50 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:215) DefaultSingletonBeanRegistry.java DEBUG Creating shared instance of singleton bean 'sessionFactory'
2016-11-09 15:13:50 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:432) AbstractAutowireCapableBeanFactory.java DEBUG Creating instance of bean 'sessionFactory'
2016-11-09 15:13:50 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:506) AbstractAutowireCapableBeanFactory.java DEBUG Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2016-11-09 15:13:50 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) AbstractBeanFactory.java DEBUG Returning cached instance of singleton bean 'dataSource'
2016-11-09 15:13:50 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1525) AbstractAutowireCapableBeanFactory.java DEBUG Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2016-11-09 15:13:50 org.hibernate.cfg.Configuration.<clinit>(Configuration.java:184) Configuration.java DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@c9a946
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@c9a946
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@c9a946
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1bd2184
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@cc0376
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@eba477
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration byte -> org.hibernate.type.ByteType@1e514e4
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration byte -> org.hibernate.type.ByteType@1e514e4
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1e514e4
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration character -> org.hibernate.type.CharacterType@1c323a
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration char -> org.hibernate.type.CharacterType@1c323a
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1c323a
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration short -> org.hibernate.type.ShortType@1992030
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration short -> org.hibernate.type.ShortType@1992030
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1992030
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@19cec59
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration int -> org.hibernate.type.IntegerType@19cec59
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@19cec59
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration long -> org.hibernate.type.LongType@1a71e88
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration long -> org.hibernate.type.LongType@1a71e88
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a71e88
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration float -> org.hibernate.type.FloatType@9a94b3
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration float -> org.hibernate.type.FloatType@9a94b3
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@9a94b3
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration double -> org.hibernate.type.DoubleType@133dfe5
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration double -> org.hibernate.type.DoubleType@133dfe5
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@133dfe5
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1740f55
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1740f55
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1db6b07
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1db6b07
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration string -> org.hibernate.type.StringType@bd6f9e
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@bd6f9e
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1024864
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1b9e1e7
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration url -> org.hibernate.type.UrlType@d2a49d
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@d2a49d
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration date -> org.hibernate.type.DateType@115a928
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@115a928
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration time -> org.hibernate.type.TimeType@4b3c7b
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4b3c7b
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@53a1b3
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@53a1b3
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@53a1b3
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1d0144a
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@14acd0b
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@14acd0b
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@14acd0b
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1b2f811
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@1e956bd
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1e956bd
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@1c77f54
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1c77f54
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@173c52f
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@173c52f
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration class -> org.hibernate.type.ClassType@1f89e1
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1f89e1
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@15c9915
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@15c9915
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7c824e
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1f8e347
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@1ae7ead
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@1ae7ead
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@1ae7ead
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1242aae
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1242aae
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1242aae
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration image -> org.hibernate.type.ImageType@83fc73
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@1510b03
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@1510b03
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@1510b03
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@13b2fdc
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@13b2fdc
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@13b2fdc
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration text -> org.hibernate.type.TextType@1c9e6c0
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@12a47fe
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration blob -> org.hibernate.type.BlobType@146950c
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@146950c
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@17f9a29
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration clob -> org.hibernate.type.ClobType@139e9f8
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@139e9f8
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@a83695
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@a83695
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1f8388a
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5cbbb1
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@1f70605
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration object -> org.hibernate.type.ObjectType@62b48a
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@62b48a
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1240739
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@19d12be
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6b5f7b
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@a4441e
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1eafe13
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1eb4667
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1a243f1
2016-11-09 15:13:50 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@174409e
2016-11-09 15:13:50 org.hibernate.annotations.common.Version.<clinit>(Version.java:37) Version.java INFO HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
2016-11-09 15:13:50 org.hibernate.Version.logVersion(Version.java:41) Version.java INFO HHH000412: Hibernate Core {4.2.2.Final}
2016-11-09 15:13:50 org.hibernate.cfg.Environment.<clinit>(Environment.java:239) Environment.java INFO HHH000206: hibernate.properties not found
2016-11-09 15:13:50 org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) Environment.java INFO HHH000021: Bytecode provider name : javassist
2016-11-09 15:13:50 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2016-11-09 15:13:50 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2016-11-09 15:13:50 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2016-11-09 15:13:50 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2016-11-09 15:13:50 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2016-11-09 15:13:50 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2016-11-09 15:13:50 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2016-11-09 15:13:50 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2016-11-09 15:13:50 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2016-11-09 15:13:50 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2016-11-09 15:13:50 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2016-11-09 15:13:50 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2016-11-09 15:13:50 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2016-11-09 15:13:50 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-11-09 15:13:50 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2016-11-09 15:13:50 org.hibernate.internal.util.xml.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:68) DTDEntityResolver.java DEBUG Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
2016-11-09 15:13:50 org.hibernate.internal.util.xml.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:70) DTDEntityResolver.java DEBUG Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
2016-11-09 15:13:50 org.hibernate.internal.util.xml.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:107) DTDEntityResolver.java DEBUG Located [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd] in classpath
2016-11-09 15:13:50 org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) IntegratorServiceImpl.java DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2016-11-09 15:13:50 org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1753) Configuration.java DEBUG Preparing to build session factory with filters : {}
2016-11-09 15:13:50 org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) DriverManagerDataSource.java DEBUG Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/yangsheng]
2016-11-09 15:13:52 org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) JdbcServicesImpl.java DEBUG Database ->
       name : MySQL
    version : 5.6.10
      major : 5
      minor : 6
2016-11-09 15:13:52 org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) JdbcServicesImpl.java DEBUG Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-3.1.10 ( $Date: 2005/05/19 15:52:23 $, $Revision: 1.1.2.2 $ )
      major : 3
      minor : 1
2016-11-09 15:13:52 org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) JdbcServicesImpl.java DEBUG JDBC version : 3.0
2016-11-09 15:13:52 org.hibernate.dialect.Dialect.<init>(Dialect.java:130) Dialect.java INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2016-11-09 15:13:52 org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) LobCreatorBuilder.java INFO HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2016-11-09 15:13:52 org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3472) Configuration.java DEBUG Processing hbm.xml files
2016-11-09 15:13:52 org.hibernate.cfg.HbmBinder.bindRootPersistentClassCommonValues(HbmBinder.java:351) HbmBinder.java DEBUG Mapping class: edu.tsinghua.entity.User -> user
2016-11-09 15:13:52 org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1351) HbmBinder.java DEBUG Mapped property: userId -> userId
2016-11-09 15:13:52 org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1351) HbmBinder.java DEBUG Mapped property: userName -> userName
2016-11-09 15:13:52 org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1351) HbmBinder.java DEBUG Mapped property: userPwd -> userPwd
2016-11-09 15:13:52 org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1351) HbmBinder.java DEBUG Mapped property: isAdmin -> isAdmin
2016-11-09 15:13:52 org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3502) Configuration.java DEBUG Process annotated classes
2016-11-09 15:13:52 org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1420) Configuration.java DEBUG Processing fk mappings (*ToOne and JoinedSubclass)
2016-11-09 15:13:52 org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1603) Configuration.java DEBUG Processing extends queue
2016-11-09 15:13:52 org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1661) Configuration.java DEBUG Processing extends queue
2016-11-09 15:13:52 org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1606) Configuration.java DEBUG Processing collection mappings
2016-11-09 15:13:52 org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1616) Configuration.java DEBUG Processing native query and ResultSetMapping mappings
2016-11-09 15:13:52 org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1624) Configuration.java DEBUG Processing association property references
2016-11-09 15:13:52 org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1646) Configuration.java DEBUG Creating tables' unique integer identifiers
2016-11-09 15:13:52 org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1647) Configuration.java DEBUG Processing foreign key constraints
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:114) SettingsFactory.java DEBUG Automatic flush during beforeCompletion(): disabled
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:120) SettingsFactory.java DEBUG Automatic session close at end of transaction: disabled
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:131) SettingsFactory.java DEBUG JDBC batch size: 15
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:137) SettingsFactory.java DEBUG JDBC batch updates for versioned data: disabled
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:147) SettingsFactory.java DEBUG Scrollable result sets: enabled
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:153) SettingsFactory.java DEBUG Wrap result sets: disabled
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:159) SettingsFactory.java DEBUG JDBC3 getGeneratedKeys(): enabled
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:171) SettingsFactory.java DEBUG multi-tenancy strategy : NONE
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:177) SettingsFactory.java DEBUG Connection release mode: auto
2016-11-09 15:13:52 org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) TransactionFactoryInitiator.java INFO HHH000399: Using default transaction strategy (direct JDBC transactions)
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:199) SettingsFactory.java DEBUG Using BatchFetchStyle : LEGACY
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:218) SettingsFactory.java DEBUG Maximum outer join fetch depth: 2
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:224) SettingsFactory.java DEBUG Default batch fetch size: 1
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:230) SettingsFactory.java DEBUG Generate SQL with comments: disabled
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:236) SettingsFactory.java DEBUG Order SQL updates by primary key: disabled
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:242) SettingsFactory.java DEBUG Order SQL inserts for batching: disabled
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:250) SettingsFactory.java DEBUG Default null ordering: none
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:541) SettingsFactory.java DEBUG Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2016-11-09 15:13:52 org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) ASTQueryTranslatorFactory.java INFO HHH000397: Using ASTQueryTranslatorFactory
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:260) SettingsFactory.java DEBUG Query language substitutions: {}
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) SettingsFactory.java DEBUG JPA-QL strict compliance: disabled
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:274) SettingsFactory.java DEBUG Second-level cache: enabled
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:280) SettingsFactory.java DEBUG Query cache: disabled
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:481) SettingsFactory.java DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:491) SettingsFactory.java DEBUG org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:295) SettingsFactory.java DEBUG Optimize cache for minimal puts: disabled
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:310) SettingsFactory.java DEBUG Structured second-level cache entries: disabled
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:320) SettingsFactory.java DEBUG Second-level cache direct-reference entries: disabled
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:328) SettingsFactory.java DEBUG Statistics: disabled
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:334) SettingsFactory.java DEBUG Deleted entity synthetic identifier rollback: disabled
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:358) SettingsFactory.java DEBUG Default entity-mode: pojo
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:364) SettingsFactory.java DEBUG Named query checking : enabled
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:370) SettingsFactory.java DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:388) SettingsFactory.java DEBUG Allow initialization of lazy state outside session : : disabled
2016-11-09 15:13:52 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:398) SettingsFactory.java DEBUG JTA Track by Thread: enabled
2016-11-09 15:13:52 org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:225) SessionFactoryImpl.java DEBUG Building session factory
2016-11-09 15:13:52 org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277) SessionFactoryImpl.java DEBUG Session factory constructed with filter configurations : {}
2016-11-09 15:13:52 org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:278) SessionFactoryImpl.java DEBUG Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_25\jre\bin, java.vm.version=23.25-b01, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\164\j2ee\struts2\YangShengSys, java.runtime.version=1.7.0_25-b17, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_25\jre\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, sun.jnu.encoding=GBK, java.library.path=C:\Program Files\Java\jdk1.7.0_25\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_91/bin/client;C:/Program Files/Java/jre1.8.0_91/bin;C:/Program Files/Java/jre1.8.0_91/lib/i386;C:\ProgramData\Oracle\Java\javapath;C:\android-sdk-windows\tools;C:\android-sdk-windows\platform-tools;C:\Program Files\Java\jdk1.7.0_25\bin;c:\oracle\product\10.2.0\db_1\bin;D:\oracle\product\10.2.0\db_1\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Mythware\e-Learning Class\;C:\Program Files\Java\jdk1.8.0_91;C:\Program Files\Git\cmd;C:\eclipse;;., hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@178e9db, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, user.home=C:\Users\Administrator, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.7, file.encoding=GBK, hibernate.format_sql=true, user.name=Administrator, java.class.path=D:\164\j2ee\struts2\YangShengSys\build\classes;D:\apache-tomcat-7.0.61\lib\annotations-api.jar;D:\apache-tomcat-7.0.61\lib\catalina-ant.jar;D:\apache-tomcat-7.0.61\lib\catalina-ha.jar;D:\apache-tomcat-7.0.61\lib\catalina-tribes.jar;D:\apache-tomcat-7.0.61\lib\catalina.jar;D:\apache-tomcat-7.0.61\lib\ecj-4.4.2.jar;D:\apache-tomcat-7.0.61\lib\el-api.jar;D:\apache-tomcat-7.0.61\lib\jasper-el.jar;D:\apache-tomcat-7.0.61\lib\jasper.jar;D:\apache-tomcat-7.0.61\lib\jsp-api.jar;D:\apache-tomcat-7.0.61\lib\servlet-api.jar;D:\apache-tomcat-7.0.61\lib\tomcat-api.jar;D:\apache-tomcat-7.0.61\lib\tomcat-coyote.jar;D:\apache-tomcat-7.0.61\lib\tomcat-dbcp.jar;D:\apache-tomcat-7.0.61\lib\tomcat-i18n-es.jar;D:\apache-tomcat-7.0.61\lib\tomcat-i18n-fr.jar;D:\apache-tomcat-7.0.61\lib\tomcat-i18n-ja.jar;D:\apache-tomcat-7.0.61\lib\tomcat-jdbc.jar;D:\apache-tomcat-7.0.61\lib\tomcat-util.jar;D:\apache-tomcat-7.0.61\lib\tomcat7-websocket.jar;D:\apache-tomcat-7.0.61\lib\websocket-api.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\antlr-2.7.7.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\aopalliance.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\asm-3.3.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\asm-commons-3.3.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\asm-tree-3.3.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\aspectjweaver.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\cglib-2.2.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\classes14.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\commons-beanutils-1.8.0.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\commons-collections-3.2.1.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\commons-fileupload-1.3.1.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\commons-io-2.2.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\commons-lang-2.4.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\commons-lang3-3.1.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\commons-logging-1.1.1.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\commons-logging-1.1.3.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\dom4j-1.6.1.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\ezmorph-1.0.6.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\freemarker-2.3.19.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\hibernate-commons-annotations-4.0.2.Final.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\hibernate-core-4.2.2.Final.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\javassist-3.11.0.GA.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\javassist-3.15.0-GA.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\jboss-logging-3.1.0.GA.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\json-lib-2.3-jdk15.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\jstl.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\log4j.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\mysql-connector-java-3.1.10-bin.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\ognl-3.0.6.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\servlet-api.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-aop-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-aspects-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-beans-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-build-src-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-context-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-context-support-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-core-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-expression-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-instrument-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-instrument-tomcat-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-jdbc-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-jms-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-orm-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-oxm-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-struts-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-test-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-tx-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-web-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-webmvc-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-webmvc-portlet-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\standard.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\struts2-core-2.3.16.3.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\struts2-json-plugin-2.3.16.3.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\struts2-spring-plugin-2.3.16.3.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\xwork-core-2.3.16.3.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@64c34e, java.vm.specification.version=1.7, sun.arch.data.model=32, java.home=C:\Program Files\Java\jdk1.7.0_25\jre, sun.java.command=edu.tsinghua.aop.Test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, java.version=1.7.0_25, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_25\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_25\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_25\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_25\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_25\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_25\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_25\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_25\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_25\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, hibernate.hbm2ddl=update, sun.desktop=windows, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}
2016-11-09 15:13:52 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) DefaultIdentifierGeneratorFactory.java DEBUG Setting dialect [org.hibernate.dialect.MySQLDialect]
2016-11-09 15:13:52 org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3592) AbstractEntityPersister.java DEBUG Static SQL for entity: edu.tsinghua.entity.User
2016-11-09 15:13:52 org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3597) AbstractEntityPersister.java DEBUG  Version select: select userId from user where userId =?
2016-11-09 15:13:52 org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3600) AbstractEntityPersister.java DEBUG  Snapshot select: select user_.userId, user_.userName as userName2_0_, user_.userPwd as userPwd3_0_, user_.isAdmin as isAdmin4_0_ from user user_ where user_.userId=?
2016-11-09 15:13:52 org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3603) AbstractEntityPersister.java DEBUG  Insert 0: insert into user (userName, userPwd, isAdmin, userId) values (?, ?, ?, ?)
2016-11-09 15:13:52 org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) AbstractEntityPersister.java DEBUG  Update 0: update user set userName=?, userPwd=?, isAdmin=? where userId=?
2016-11-09 15:13:52 org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3605) AbstractEntityPersister.java DEBUG  Delete 0: delete from user where userId=?
2016-11-09 15:13:52 org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) EntityLoader.java DEBUG Static select for entity edu.tsinghua.entity.User [NONE]: select user0_.userId as userId1_0_0_, user0_.userName as userName2_0_0_, user0_.userPwd as userPwd3_0_0_, user0_.isAdmin as isAdmin4_0_0_ from user user0_ where user0_.userId=?
2016-11-09 15:13:52 org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) EntityLoader.java DEBUG Static select for entity edu.tsinghua.entity.User [READ]: select user0_.userId as userId1_0_0_, user0_.userName as userName2_0_0_, user0_.userPwd as userPwd3_0_0_, user0_.isAdmin as isAdmin4_0_0_ from user user0_ where user0_.userId=?
2016-11-09 15:13:52 org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) EntityLoader.java DEBUG Static select for entity edu.tsinghua.entity.User [UPGRADE]: select user0_.userId as userId1_0_0_, user0_.userName as userName2_0_0_, user0_.userPwd as userPwd3_0_0_, user0_.isAdmin as isAdmin4_0_0_ from user user0_ where user0_.userId=? for update
2016-11-09 15:13:52 org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) EntityLoader.java DEBUG Static select for entity edu.tsinghua.entity.User [UPGRADE_NOWAIT]: select user0_.userId as userId1_0_0_, user0_.userName as userName2_0_0_, user0_.userPwd as userPwd3_0_0_, user0_.isAdmin as isAdmin4_0_0_ from user user0_ where user0_.userId=? for update
2016-11-09 15:13:52 org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) EntityLoader.java DEBUG Static select for entity edu.tsinghua.entity.User [FORCE]: select user0_.userId as userId1_0_0_, user0_.userName as userName2_0_0_, user0_.userPwd as userPwd3_0_0_, user0_.isAdmin as isAdmin4_0_0_ from user user0_ where user0_.userId=? for update
2016-11-09 15:13:52 org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) EntityLoader.java DEBUG Static select for entity edu.tsinghua.entity.User [PESSIMISTIC_READ]: select user0_.userId as userId1_0_0_, user0_.userName as userName2_0_0_, user0_.userPwd as userPwd3_0_0_, user0_.isAdmin as isAdmin4_0_0_ from user user0_ where user0_.userId=? lock in share mode
2016-11-09 15:13:52 org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) EntityLoader.java DEBUG Static select for entity edu.tsinghua.entity.User [PESSIMISTIC_WRITE]: select user0_.userId as userId1_0_0_, user0_.userName as userName2_0_0_, user0_.userPwd as userPwd3_0_0_, user0_.isAdmin as isAdmin4_0_0_ from user user0_ where user0_.userId=? for update
2016-11-09 15:13:52 org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) EntityLoader.java DEBUG Static select for entity edu.tsinghua.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.userId as userId1_0_0_, user0_.userName as userName2_0_0_, user0_.userPwd as userPwd3_0_0_, user0_.isAdmin as isAdmin4_0_0_ from user user0_ where user0_.userId=? for update
2016-11-09 15:13:52 org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) EntityLoader.java DEBUG Static select for entity edu.tsinghua.entity.User [OPTIMISTIC]: select user0_.userId as userId1_0_0_, user0_.userName as userName2_0_0_, user0_.userPwd as userPwd3_0_0_, user0_.isAdmin as isAdmin4_0_0_ from user user0_ where user0_.userId=?
2016-11-09 15:13:52 org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) EntityLoader.java DEBUG Static select for entity edu.tsinghua.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.userId as userId1_0_0_, user0_.userName as userName2_0_0_, user0_.userPwd as userPwd3_0_0_, user0_.isAdmin as isAdmin4_0_0_ from user user0_ where user0_.userId=?
2016-11-09 15:13:52 org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) CascadeEntityLoader.java DEBUG Static select for action ACTION_MERGE on entity edu.tsinghua.entity.User: select user0_.userId as userId1_0_0_, user0_.userName as userName2_0_0_, user0_.userPwd as userPwd3_0_0_, user0_.isAdmin as isAdmin4_0_0_ from user user0_ where user0_.userId=?
2016-11-09 15:13:52 org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) CascadeEntityLoader.java DEBUG Static select for action ACTION_REFRESH on entity edu.tsinghua.entity.User: select user0_.userId as userId1_0_0_, user0_.userName as userName2_0_0_, user0_.userPwd as userPwd3_0_0_, user0_.isAdmin as isAdmin4_0_0_ from user user0_ where user0_.userId=?
2016-11-09 15:13:52 org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:62) SessionFactoryRegistry.java DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@10ce358
2016-11-09 15:13:52 org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) SessionFactoryRegistry.java DEBUG Registering SessionFactory: f98abbc7-b601-430d-84d9-22aa93ac5659 (<unnamed>)
2016-11-09 15:13:52 org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) SessionFactoryRegistry.java DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2016-11-09 15:13:52 org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:488) SessionFactoryImpl.java DEBUG Instantiated session factory
2016-11-09 15:13:52 org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1068) SessionFactoryImpl.java DEBUG Checking 0 named HQL queries
2016-11-09 15:13:52 org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1091) SessionFactoryImpl.java DEBUG Checking 0 named SQL queries
2016-11-09 15:13:52 org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) StatisticsInitiator.java DEBUG Statistics initialized [enabled=false]
2016-11-09 15:13:52 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:460) AbstractAutowireCapableBeanFactory.java DEBUG Finished creating instance of bean 'sessionFactory'
2016-11-09 15:13:52 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:215) DefaultSingletonBeanRegistry.java DEBUG Creating shared instance of singleton bean 'userDao'
2016-11-09 15:13:52 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:432) AbstractAutowireCapableBeanFactory.java DEBUG Creating instance of bean 'userDao'
2016-11-09 15:13:52 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:506) AbstractAutowireCapableBeanFactory.java DEBUG Eagerly caching bean 'userDao' to allow for resolving potential circular references
2016-11-09 15:13:52 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) AbstractBeanFactory.java DEBUG Returning cached instance of singleton bean 'sessionFactory'
2016-11-09 15:13:52 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1150) AbstractAutowireCapableBeanFactory.java DEBUG Added autowiring by name from bean name 'userDao' via property 'sessionFactory' to bean named 'sessionFactory'
2016-11-09 15:13:52 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:460) AbstractAutowireCapableBeanFactory.java DEBUG Finished creating instance of bean 'userDao'
2016-11-09 15:13:52 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:215) DefaultSingletonBeanRegistry.java DEBUG Creating shared instance of singleton bean 'userBiz'
2016-11-09 15:13:52 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:432) AbstractAutowireCapableBeanFactory.java DEBUG Creating instance of bean 'userBiz'
2016-11-09 15:13:52 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:506) AbstractAutowireCapableBeanFactory.java DEBUG Eagerly caching bean 'userBiz' to allow for resolving potential circular references
2016-11-09 15:13:52 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) AbstractBeanFactory.java DEBUG Returning cached instance of singleton bean 'userDao'
2016-11-09 15:13:52 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1150) AbstractAutowireCapableBeanFactory.java DEBUG Added autowiring by name from bean name 'userBiz' via property 'userDao' to bean named 'userDao'
2016-11-09 15:13:52 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:460) AbstractAutowireCapableBeanFactory.java DEBUG Finished creating instance of bean 'userBiz'
2016-11-09 15:13:52 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:215) DefaultSingletonBeanRegistry.java DEBUG Creating shared instance of singleton bean 'loginAct'
2016-11-09 15:13:52 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:432) AbstractAutowireCapableBeanFactory.java DEBUG Creating instance of bean 'loginAct'
2016-11-09 15:13:52 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:506) AbstractAutowireCapableBeanFactory.java DEBUG Eagerly caching bean 'loginAct' to allow for resolving potential circular references
2016-11-09 15:13:52 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) AbstractBeanFactory.java DEBUG Returning cached instance of singleton bean 'userBiz'
2016-11-09 15:13:52 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1150) AbstractAutowireCapableBeanFactory.java DEBUG Added autowiring by name from bean name 'loginAct' via property 'userBiz' to bean named 'userBiz'
2016-11-09 15:13:52 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:460) AbstractAutowireCapableBeanFactory.java DEBUG Finished creating instance of bean 'loginAct'
2016-11-09 15:13:52 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:215) DefaultSingletonBeanRegistry.java DEBUG Creating shared instance of singleton bean 'biz'
2016-11-09 15:13:52 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:432) AbstractAutowireCapableBeanFactory.java DEBUG Creating instance of bean 'biz'
2016-11-09 15:13:52 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:506) AbstractAutowireCapableBeanFactory.java DEBUG Eagerly caching bean 'biz' to allow for resolving potential circular references
2016-11-09 15:13:52 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:460) AbstractAutowireCapableBeanFactory.java DEBUG Finished creating instance of bean 'biz'
2016-11-09 15:13:52 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:215) DefaultSingletonBeanRegistry.java DEBUG Creating shared instance of singleton bean 'loggerAdvice'
2016-11-09 15:13:52 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:432) AbstractAutowireCapableBeanFactory.java DEBUG Creating instance of bean 'loggerAdvice'
2016-11-09 15:13:52 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:506) AbstractAutowireCapableBeanFactory.java DEBUG Eagerly caching bean 'loggerAdvice' to allow for resolving potential circular references
2016-11-09 15:13:52 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:460) AbstractAutowireCapableBeanFactory.java DEBUG Finished creating instance of bean 'loggerAdvice'
2016-11-09 15:13:52 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:215) DefaultSingletonBeanRegistry.java DEBUG Creating shared instance of singleton bean 'zhenghe'
2016-11-09 15:13:52 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:432) AbstractAutowireCapableBeanFactory.java DEBUG Creating instance of bean 'zhenghe'
2016-11-09 15:13:52 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:506) AbstractAutowireCapableBeanFactory.java DEBUG Eagerly caching bean 'zhenghe' to allow for resolving potential circular references
2016-11-09 15:13:52 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) AbstractBeanFactory.java DEBUG Returning cached instance of singleton bean 'biz'
2016-11-09 15:13:52 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:444) DefaultSingletonBeanRegistry.java INFO Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1ba11bc: defining beans [userDao1,dataSource,sessionFactory,userDao,userBiz,loginAct,biz,loggerAdvice,zhenghe]; root of factory hierarchy
2016-11-09 15:13:52 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:500) DefaultSingletonBeanRegistry.java DEBUG Retrieved dependent beans for bean 'sessionFactory': [userDao]
2016-11-09 15:13:52 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:500) DefaultSingletonBeanRegistry.java DEBUG Retrieved dependent beans for bean 'userDao': [userBiz]
2016-11-09 15:13:52 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:500) DefaultSingletonBeanRegistry.java DEBUG Retrieved dependent beans for bean 'userBiz': [loginAct]
2016-11-09 15:13:52 org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:226) DisposableBeanAdapter.java DEBUG Invoking destroy() on bean with name 'sessionFactory'
2016-11-09 15:13:52 org.hibernate.internal.SessionFactoryImpl.close(SessionFactoryImpl.java:1369) SessionFactoryImpl.java DEBUG HHH000031: Closing
2016-11-09 15:14:25 org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:112) AbstractEnvironment.java DEBUG Initializing new StandardEnvironment
2016-11-09 15:14:25 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:107) MutablePropertySources.java DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-11-09 15:14:25 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:107) MutablePropertySources.java DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-09 15:14:25 org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:116) AbstractEnvironment.java DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-09 15:14:25 org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:510) AbstractApplicationContext.java INFO Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@d6ee28: startup date [Wed Nov 09 15:14:25 CST 2016]; root of context hierarchy
2016-11-09 15:14:25 org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:112) AbstractEnvironment.java DEBUG Initializing new StandardEnvironment
2016-11-09 15:14:25 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:107) MutablePropertySources.java DEBUG Adding [systemProperties] PropertySource with lowest search precedence
2016-11-09 15:14:25 org.springframework.core.env.MutablePropertySources.addLast(MutablePropertySources.java:107) MutablePropertySources.java DEBUG Adding [systemEnvironment] PropertySource with lowest search precedence
2016-11-09 15:14:25 org.springframework.core.env.AbstractEnvironment.<init>(AbstractEnvironment.java:116) AbstractEnvironment.java DEBUG Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
2016-11-09 15:14:25 org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:315) XmlBeanDefinitionReader.java INFO Loading XML bean definitions from class path resource [applicationContext.xml]
2016-11-09 15:14:25 org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:72) DefaultDocumentLoader.java DEBUG Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2016-11-09 15:14:25 org.springframework.beans.factory.xml.BeansDtdResolver.resolveEntity(BeansDtdResolver.java:73) BeansDtdResolver.java DEBUG Found beans DTD [http://www.springframework.org/dtd/spring-beans.dtd] in classpath: spring-beans.dtd
2016-11-09 15:14:25 org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:106) DefaultBeanDefinitionDocumentReader.java DEBUG Loading bean definitions
2016-11-09 15:14:25 org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:315) XmlBeanDefinitionReader.java INFO Loading XML bean definitions from class path resource [dao.xml]
2016-11-09 15:14:25 org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:72) DefaultDocumentLoader.java DEBUG Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2016-11-09 15:14:25 org.springframework.beans.factory.xml.BeansDtdResolver.resolveEntity(BeansDtdResolver.java:73) BeansDtdResolver.java DEBUG Found beans DTD [http://www.springframework.org/dtd/spring-beans.dtd] in classpath: spring-beans.dtd
2016-11-09 15:14:25 org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(DefaultBeanDefinitionDocumentReader.java:106) DefaultBeanDefinitionDocumentReader.java DEBUG Loading bean definitions
2016-11-09 15:14:25 org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:470) BeanDefinitionParserDelegate.java DEBUG No XML 'id' specified - using 'userDao1' as bean name and [] as aliases
2016-11-09 15:14:25 org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.importBeanDefinitionResource(DefaultBeanDefinitionDocumentReader.java:265) DefaultBeanDefinitionDocumentReader.java DEBUG Imported 1 bean definitions from relative location [dao.xml]
2016-11-09 15:14:25 org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:470) BeanDefinitionParserDelegate.java DEBUG No XML 'id' specified - using 'dataSource' as bean name and [] as aliases
2016-11-09 15:14:25 org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:470) BeanDefinitionParserDelegate.java DEBUG No XML 'id' specified - using 'sessionFactory' as bean name and [] as aliases
2016-11-09 15:14:25 org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:470) BeanDefinitionParserDelegate.java DEBUG No XML 'id' specified - using 'userDao' as bean name and [] as aliases
2016-11-09 15:14:25 org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:470) BeanDefinitionParserDelegate.java DEBUG No XML 'id' specified - using 'userBiz' as bean name and [] as aliases
2016-11-09 15:14:25 org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:470) BeanDefinitionParserDelegate.java DEBUG No XML 'id' specified - using 'loginAct' as bean name and [] as aliases
2016-11-09 15:14:25 org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:470) BeanDefinitionParserDelegate.java DEBUG No XML 'id' specified - using 'biz' as bean name and [] as aliases
2016-11-09 15:14:25 org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:470) BeanDefinitionParserDelegate.java DEBUG No XML 'id' specified - using 'loggerAdvice' as bean name and [] as aliases
2016-11-09 15:14:25 org.springframework.beans.factory.xml.BeanDefinitionParserDelegate.parseBeanDefinitionElement(BeanDefinitionParserDelegate.java:470) BeanDefinitionParserDelegate.java DEBUG No XML 'id' specified - using 'zhenghe' as bean name and [] as aliases
2016-11-09 15:14:25 org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:216) AbstractBeanDefinitionReader.java DEBUG Loaded 9 bean definitions from location pattern [applicationContext.xml]
2016-11-09 15:14:25 org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:540) AbstractApplicationContext.java DEBUG Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@d6ee28: org.springframework.beans.factory.support.DefaultListableBeanFactory@1ba11bc: defining beans [userDao1,dataSource,sessionFactory,userDao,userBiz,loginAct,biz,loggerAdvice,zhenghe]; root of factory hierarchy
2016-11-09 15:14:26 org.springframework.context.support.AbstractApplicationContext.initMessageSource(AbstractApplicationContext.java:807) AbstractApplicationContext.java DEBUG Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1c56850]
2016-11-09 15:14:26 org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(AbstractApplicationContext.java:831) AbstractApplicationContext.java DEBUG Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@12429c]
2016-11-09 15:14:26 org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:596) DefaultListableBeanFactory.java INFO Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1ba11bc: defining beans [userDao1,dataSource,sessionFactory,userDao,userBiz,loginAct,biz,loggerAdvice,zhenghe]; root of factory hierarchy
2016-11-09 15:14:26 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:215) DefaultSingletonBeanRegistry.java DEBUG Creating shared instance of singleton bean 'userDao1'
2016-11-09 15:14:26 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:432) AbstractAutowireCapableBeanFactory.java DEBUG Creating instance of bean 'userDao1'
2016-11-09 15:14:26 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:506) AbstractAutowireCapableBeanFactory.java DEBUG Eagerly caching bean 'userDao1' to allow for resolving potential circular references
2016-11-09 15:14:26 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:460) AbstractAutowireCapableBeanFactory.java DEBUG Finished creating instance of bean 'userDao1'
2016-11-09 15:14:26 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:215) DefaultSingletonBeanRegistry.java DEBUG Creating shared instance of singleton bean 'dataSource'
2016-11-09 15:14:26 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:432) AbstractAutowireCapableBeanFactory.java DEBUG Creating instance of bean 'dataSource'
2016-11-09 15:14:26 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:506) AbstractAutowireCapableBeanFactory.java DEBUG Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2016-11-09 15:14:26 org.springframework.jdbc.datasource.DriverManagerDataSource.setDriverClassName(DriverManagerDataSource.java:153) DriverManagerDataSource.java INFO Loaded JDBC driver: com.mysql.jdbc.Driver
2016-11-09 15:14:26 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:460) AbstractAutowireCapableBeanFactory.java DEBUG Finished creating instance of bean 'dataSource'
2016-11-09 15:14:26 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:215) DefaultSingletonBeanRegistry.java DEBUG Creating shared instance of singleton bean 'sessionFactory'
2016-11-09 15:14:26 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:432) AbstractAutowireCapableBeanFactory.java DEBUG Creating instance of bean 'sessionFactory'
2016-11-09 15:14:26 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:506) AbstractAutowireCapableBeanFactory.java DEBUG Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2016-11-09 15:14:26 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) AbstractBeanFactory.java DEBUG Returning cached instance of singleton bean 'dataSource'
2016-11-09 15:14:26 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1525) AbstractAutowireCapableBeanFactory.java DEBUG Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2016-11-09 15:14:26 org.hibernate.cfg.Configuration.<clinit>(Configuration.java:184) Configuration.java DEBUG Logging Provider: org.jboss.logging.Log4jLoggerProvider
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@c9a946
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration boolean -> org.hibernate.type.BooleanType@c9a946
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@c9a946
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1bd2184
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration true_false -> org.hibernate.type.TrueFalseType@cc0376
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration yes_no -> org.hibernate.type.YesNoType@eba477
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration byte -> org.hibernate.type.ByteType@1e514e4
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration byte -> org.hibernate.type.ByteType@1e514e4
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1e514e4
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration character -> org.hibernate.type.CharacterType@1c323a
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration char -> org.hibernate.type.CharacterType@1c323a
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1c323a
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration short -> org.hibernate.type.ShortType@1992030
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration short -> org.hibernate.type.ShortType@1992030
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1992030
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration integer -> org.hibernate.type.IntegerType@19cec59
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration int -> org.hibernate.type.IntegerType@19cec59
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@19cec59
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration long -> org.hibernate.type.LongType@1a71e88
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration long -> org.hibernate.type.LongType@1a71e88
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a71e88
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration float -> org.hibernate.type.FloatType@9a94b3
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration float -> org.hibernate.type.FloatType@9a94b3
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.lang.Float -> org.hibernate.type.FloatType@9a94b3
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration double -> org.hibernate.type.DoubleType@133dfe5
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration double -> org.hibernate.type.DoubleType@133dfe5
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@133dfe5
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1740f55
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1740f55
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1db6b07
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1db6b07
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration string -> org.hibernate.type.StringType@bd6f9e
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.lang.String -> org.hibernate.type.StringType@bd6f9e
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1024864
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1b9e1e7
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration url -> org.hibernate.type.UrlType@d2a49d
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.net.URL -> org.hibernate.type.UrlType@d2a49d
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration date -> org.hibernate.type.DateType@115a928
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.sql.Date -> org.hibernate.type.DateType@115a928
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration time -> org.hibernate.type.TimeType@4b3c7b
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4b3c7b
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration timestamp -> org.hibernate.type.TimestampType@53a1b3
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@53a1b3
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.util.Date -> org.hibernate.type.TimestampType@53a1b3
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1d0144a
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration calendar -> org.hibernate.type.CalendarType@14acd0b
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@14acd0b
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@14acd0b
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1b2f811
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration locale -> org.hibernate.type.LocaleType@1e956bd
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1e956bd
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration currency -> org.hibernate.type.CurrencyType@1c77f54
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1c77f54
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration timezone -> org.hibernate.type.TimeZoneType@173c52f
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@173c52f
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration class -> org.hibernate.type.ClassType@1f89e1
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1f89e1
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@15c9915
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@15c9915
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7c824e
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1f8e347
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration binary -> org.hibernate.type.BinaryType@1ae7ead
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration byte[] -> org.hibernate.type.BinaryType@1ae7ead
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration [B -> org.hibernate.type.BinaryType@1ae7ead
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1242aae
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1242aae
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1242aae
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration image -> org.hibernate.type.ImageType@83fc73
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration characters -> org.hibernate.type.CharArrayType@1510b03
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration char[] -> org.hibernate.type.CharArrayType@1510b03
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration [C -> org.hibernate.type.CharArrayType@1510b03
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@13b2fdc
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@13b2fdc
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@13b2fdc
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration text -> org.hibernate.type.TextType@1c9e6c0
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration ntext -> org.hibernate.type.NTextType@12a47fe
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration blob -> org.hibernate.type.BlobType@146950c
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@146950c
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@17f9a29
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration clob -> org.hibernate.type.ClobType@139e9f8
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@139e9f8
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration nclob -> org.hibernate.type.NClobType@a83695
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@a83695
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1f8388a
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5cbbb1
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration serializable -> org.hibernate.type.SerializableType@1f70605
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration object -> org.hibernate.type.ObjectType@62b48a
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@62b48a
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1240739
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@19d12be
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6b5f7b
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@a4441e
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1eafe13
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1eb4667
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1a243f1
2016-11-09 15:14:26 org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:148) BasicTypeRegistry.java DEBUG Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@174409e
2016-11-09 15:14:26 org.hibernate.annotations.common.Version.<clinit>(Version.java:37) Version.java INFO HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
2016-11-09 15:14:26 org.hibernate.Version.logVersion(Version.java:41) Version.java INFO HHH000412: Hibernate Core {4.2.2.Final}
2016-11-09 15:14:26 org.hibernate.cfg.Environment.<clinit>(Environment.java:239) Environment.java INFO HHH000206: hibernate.properties not found
2016-11-09 15:14:26 org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:342) Environment.java INFO HHH000021: Bytecode provider name : javassist
2016-11-09 15:14:26 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2016-11-09 15:14:26 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2016-11-09 15:14:26 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2016-11-09 15:14:26 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2016-11-09 15:14:26 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2016-11-09 15:14:26 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2016-11-09 15:14:26 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2016-11-09 15:14:26 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2016-11-09 15:14:26 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2016-11-09 15:14:26 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2016-11-09 15:14:26 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2016-11-09 15:14:26 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2016-11-09 15:14:26 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2016-11-09 15:14:26 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-11-09 15:14:26 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:93) DefaultIdentifierGeneratorFactory.java DEBUG Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2016-11-09 15:14:26 org.hibernate.internal.util.xml.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:68) DTDEntityResolver.java DEBUG Trying to resolve system-id [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd]
2016-11-09 15:14:26 org.hibernate.internal.util.xml.DTDEntityResolver.resolveEntity(DTDEntityResolver.java:70) DTDEntityResolver.java DEBUG Recognized hibernate namespace; attempting to resolve on classpath under org/hibernate/
2016-11-09 15:14:26 org.hibernate.internal.util.xml.DTDEntityResolver.resolveOnClassPath(DTDEntityResolver.java:107) DTDEntityResolver.java DEBUG Located [http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd] in classpath
2016-11-09 15:14:26 org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:59) IntegratorServiceImpl.java DEBUG Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2016-11-09 15:14:26 org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1753) Configuration.java DEBUG Preparing to build session factory with filters : {}
2016-11-09 15:14:26 org.springframework.jdbc.datasource.DriverManagerDataSource.getConnectionFromDriver(DriverManagerDataSource.java:162) DriverManagerDataSource.java DEBUG Creating new JDBC DriverManager Connection to [jdbc:mysql://localhost:3306/yangsheng]
2016-11-09 15:14:27 org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:121) JdbcServicesImpl.java DEBUG Database ->
       name : MySQL
    version : 5.6.10
      major : 5
      minor : 6
2016-11-09 15:14:27 org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:127) JdbcServicesImpl.java DEBUG Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-3.1.10 ( $Date: 2005/05/19 15:52:23 $, $Revision: 1.1.2.2 $ )
      major : 3
      minor : 1
2016-11-09 15:14:27 org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:133) JdbcServicesImpl.java DEBUG JDBC version : 3.0
2016-11-09 15:14:27 org.hibernate.dialect.Dialect.<init>(Dialect.java:130) Dialect.java INFO HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
2016-11-09 15:14:27 org.hibernate.engine.jdbc.internal.LobCreatorBuilder.useContextualLobCreation(LobCreatorBuilder.java:94) LobCreatorBuilder.java INFO HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2016-11-09 15:14:27 org.hibernate.cfg.Configuration$MetadataSourceQueue.processHbmXmlQueue(Configuration.java:3472) Configuration.java DEBUG Processing hbm.xml files
2016-11-09 15:14:27 org.hibernate.cfg.HbmBinder.bindRootPersistentClassCommonValues(HbmBinder.java:351) HbmBinder.java DEBUG Mapping class: edu.tsinghua.entity.User -> user
2016-11-09 15:14:27 org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1351) HbmBinder.java DEBUG Mapped property: userId -> userId
2016-11-09 15:14:27 org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1351) HbmBinder.java DEBUG Mapped property: userName -> userName
2016-11-09 15:14:27 org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1351) HbmBinder.java DEBUG Mapped property: userPwd -> userPwd
2016-11-09 15:14:27 org.hibernate.cfg.HbmBinder.bindProperty(HbmBinder.java:1351) HbmBinder.java DEBUG Mapped property: isAdmin -> isAdmin
2016-11-09 15:14:27 org.hibernate.cfg.Configuration$MetadataSourceQueue.processAnnotatedClassesQueue(Configuration.java:3502) Configuration.java DEBUG Process annotated classes
2016-11-09 15:14:27 org.hibernate.cfg.Configuration.processFkSecondPassInOrder(Configuration.java:1420) Configuration.java DEBUG Processing fk mappings (*ToOne and JoinedSubclass)
2016-11-09 15:14:27 org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1603) Configuration.java DEBUG Processing extends queue
2016-11-09 15:14:27 org.hibernate.cfg.Configuration.processExtendsQueue(Configuration.java:1661) Configuration.java DEBUG Processing extends queue
2016-11-09 15:14:27 org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1606) Configuration.java DEBUG Processing collection mappings
2016-11-09 15:14:27 org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1616) Configuration.java DEBUG Processing native query and ResultSetMapping mappings
2016-11-09 15:14:27 org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1624) Configuration.java DEBUG Processing association property references
2016-11-09 15:14:27 org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1646) Configuration.java DEBUG Creating tables' unique integer identifiers
2016-11-09 15:14:27 org.hibernate.cfg.Configuration.originalSecondPassCompile(Configuration.java:1647) Configuration.java DEBUG Processing foreign key constraints
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:114) SettingsFactory.java DEBUG Automatic flush during beforeCompletion(): disabled
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:120) SettingsFactory.java DEBUG Automatic session close at end of transaction: disabled
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:131) SettingsFactory.java DEBUG JDBC batch size: 15
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:137) SettingsFactory.java DEBUG JDBC batch updates for versioned data: disabled
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:147) SettingsFactory.java DEBUG Scrollable result sets: enabled
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:153) SettingsFactory.java DEBUG Wrap result sets: disabled
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:159) SettingsFactory.java DEBUG JDBC3 getGeneratedKeys(): enabled
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:171) SettingsFactory.java DEBUG multi-tenancy strategy : NONE
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:177) SettingsFactory.java DEBUG Connection release mode: auto
2016-11-09 15:14:27 org.hibernate.engine.transaction.internal.TransactionFactoryInitiator.initiateService(TransactionFactoryInitiator.java:68) TransactionFactoryInitiator.java INFO HHH000399: Using default transaction strategy (direct JDBC transactions)
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:199) SettingsFactory.java DEBUG Using BatchFetchStyle : LEGACY
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:218) SettingsFactory.java DEBUG Maximum outer join fetch depth: 2
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:224) SettingsFactory.java DEBUG Default batch fetch size: 1
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:230) SettingsFactory.java DEBUG Generate SQL with comments: disabled
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:236) SettingsFactory.java DEBUG Order SQL updates by primary key: disabled
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:242) SettingsFactory.java DEBUG Order SQL inserts for batching: disabled
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:250) SettingsFactory.java DEBUG Default null ordering: none
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.createQueryTranslatorFactory(SettingsFactory.java:541) SettingsFactory.java DEBUG Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2016-11-09 15:14:27 org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory.<init>(ASTQueryTranslatorFactory.java:48) ASTQueryTranslatorFactory.java INFO HHH000397: Using ASTQueryTranslatorFactory
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:260) SettingsFactory.java DEBUG Query language substitutions: {}
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:266) SettingsFactory.java DEBUG JPA-QL strict compliance: disabled
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:274) SettingsFactory.java DEBUG Second-level cache: enabled
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:280) SettingsFactory.java DEBUG Query cache: disabled
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:481) SettingsFactory.java DEBUG Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.createRegionFactory(SettingsFactory.java:491) SettingsFactory.java DEBUG org.hibernate.cache.internal.NoCachingRegionFactory did not provide constructor accepting java.util.Properties; attempting no-arg constructor.
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:295) SettingsFactory.java DEBUG Optimize cache for minimal puts: disabled
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:310) SettingsFactory.java DEBUG Structured second-level cache entries: disabled
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:320) SettingsFactory.java DEBUG Second-level cache direct-reference entries: disabled
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:328) SettingsFactory.java DEBUG Statistics: disabled
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:334) SettingsFactory.java DEBUG Deleted entity synthetic identifier rollback: disabled
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:358) SettingsFactory.java DEBUG Default entity-mode: pojo
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:364) SettingsFactory.java DEBUG Named query checking : enabled
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:370) SettingsFactory.java DEBUG Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:388) SettingsFactory.java DEBUG Allow initialization of lazy state outside session : : disabled
2016-11-09 15:14:27 org.hibernate.cfg.SettingsFactory.buildSettings(SettingsFactory.java:398) SettingsFactory.java DEBUG JTA Track by Thread: enabled
2016-11-09 15:14:27 org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:225) SessionFactoryImpl.java DEBUG Building session factory
2016-11-09 15:14:27 org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277) SessionFactoryImpl.java DEBUG Session factory constructed with filter configurations : {}
2016-11-09 15:14:27 org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:278) SessionFactoryImpl.java DEBUG Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=C:\Program Files\Java\jdk1.7.0_25\jre\bin, java.vm.version=23.25-b01, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) Client VM, file.encoding.pkg=sun.io, user.script=, user.country=CN, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=, java.vm.specification.name=Java Virtual Machine Specification, user.dir=D:\164\j2ee\struts2\YangShengSys, java.runtime.version=1.7.0_25-b17, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext, java.endorsed.dirs=C:\Program Files\Java\jdk1.7.0_25\jre\lib\endorsed, os.arch=x86, java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, sun.jnu.encoding=GBK, java.library.path=C:\Program Files\Java\jdk1.7.0_25\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_91/bin/client;C:/Program Files/Java/jre1.8.0_91/bin;C:/Program Files/Java/jre1.8.0_91/lib/i386;C:\ProgramData\Oracle\Java\javapath;C:\android-sdk-windows\tools;C:\android-sdk-windows\platform-tools;C:\Program Files\Java\jdk1.7.0_25\bin;c:\oracle\product\10.2.0\db_1\bin;D:\oracle\product\10.2.0\db_1\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\Mythware\e-Learning Class\;C:\Program Files\Java\jdk1.8.0_91;C:\Program Files\Git\cmd;C:\eclipse;;., hibernate.connection.datasource=org.springframework.jdbc.datasource.DriverManagerDataSource@242ba3, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot Client Compiler, os.version=6.1, user.home=C:\Users\Administrator, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.7, file.encoding=GBK, hibernate.format_sql=true, user.name=Administrator, java.class.path=D:\164\j2ee\struts2\YangShengSys\build\classes;D:\apache-tomcat-7.0.61\lib\annotations-api.jar;D:\apache-tomcat-7.0.61\lib\catalina-ant.jar;D:\apache-tomcat-7.0.61\lib\catalina-ha.jar;D:\apache-tomcat-7.0.61\lib\catalina-tribes.jar;D:\apache-tomcat-7.0.61\lib\catalina.jar;D:\apache-tomcat-7.0.61\lib\ecj-4.4.2.jar;D:\apache-tomcat-7.0.61\lib\el-api.jar;D:\apache-tomcat-7.0.61\lib\jasper-el.jar;D:\apache-tomcat-7.0.61\lib\jasper.jar;D:\apache-tomcat-7.0.61\lib\jsp-api.jar;D:\apache-tomcat-7.0.61\lib\servlet-api.jar;D:\apache-tomcat-7.0.61\lib\tomcat-api.jar;D:\apache-tomcat-7.0.61\lib\tomcat-coyote.jar;D:\apache-tomcat-7.0.61\lib\tomcat-dbcp.jar;D:\apache-tomcat-7.0.61\lib\tomcat-i18n-es.jar;D:\apache-tomcat-7.0.61\lib\tomcat-i18n-fr.jar;D:\apache-tomcat-7.0.61\lib\tomcat-i18n-ja.jar;D:\apache-tomcat-7.0.61\lib\tomcat-jdbc.jar;D:\apache-tomcat-7.0.61\lib\tomcat-util.jar;D:\apache-tomcat-7.0.61\lib\tomcat7-websocket.jar;D:\apache-tomcat-7.0.61\lib\websocket-api.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\antlr-2.7.7.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\aopalliance.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\asm-3.3.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\asm-commons-3.3.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\asm-tree-3.3.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\aspectjweaver.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\cglib-2.2.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\classes14.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\commons-beanutils-1.8.0.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\commons-collections-3.2.1.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\commons-fileupload-1.3.1.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\commons-io-2.2.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\commons-lang-2.4.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\commons-lang3-3.1.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\commons-logging-1.1.1.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\commons-logging-1.1.3.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\dom4j-1.6.1.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\ezmorph-1.0.6.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\freemarker-2.3.19.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\hibernate-commons-annotations-4.0.2.Final.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\hibernate-core-4.2.2.Final.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\hibernate-jpa-2.0-api-1.0.1.Final.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\javassist-3.11.0.GA.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\javassist-3.15.0-GA.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\jboss-logging-3.1.0.GA.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\jboss-transaction-api_1.1_spec-1.0.1.Final.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\json-lib-2.3-jdk15.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\jstl.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\log4j.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\mysql-connector-java-3.1.10-bin.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\ognl-3.0.6.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\servlet-api.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-aop-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-aspects-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-beans-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-build-src-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-context-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-context-support-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-core-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-expression-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-instrument-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-instrument-tomcat-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-jdbc-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-jms-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-orm-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-oxm-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-struts-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-test-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-tx-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-web-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-webmvc-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\spring-webmvc-portlet-3.2.3.RELEASE.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\standard.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\struts2-core-2.3.16.3.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\struts2-json-plugin-2.3.16.3.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\struts2-spring-plugin-2.3.16.3.jar;D:\164\j2ee\struts2\YangShengSys\WebContent\WEB-INF\lib\xwork-core-2.3.16.3.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, hibernate.classLoader.application=sun.misc.Launcher$AppClassLoader@64c34e, java.vm.specification.version=1.7, sun.arch.data.model=32, java.home=C:\Program Files\Java\jdk1.7.0_25\jre, sun.java.command=edu.tsinghua.aop.Test, hibernate.dialect=org.hibernate.dialect.MySQLDialect, java.specification.vendor=Oracle Corporation, user.language=zh, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, sharing, java.version=1.7.0_25, java.ext.dirs=C:\Program Files\Java\jdk1.7.0_25\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.7.0_25\jre\lib\resources.jar;C:\Program Files\Java\jdk1.7.0_25\jre\lib\rt.jar;C:\Program Files\Java\jdk1.7.0_25\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.7.0_25\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.7.0_25\jre\lib\jce.jar;C:\Program Files\Java\jdk1.7.0_25\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.7.0_25\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.7.0_25\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, hibernate.hbm2ddl=update, sun.desktop=windows, sun.cpu.isalist=pentium_pro+mmx pentium_pro pentium+mmx pentium i486 i386 i86}
2016-11-09 15:14:27 org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.setDialect(DefaultIdentifierGeneratorFactory.java:107) DefaultIdentifierGeneratorFactory.java DEBUG Setting dialect [org.hibernate.dialect.MySQLDialect]
2016-11-09 15:14:27 org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3592) AbstractEntityPersister.java DEBUG Static SQL for entity: edu.tsinghua.entity.User
2016-11-09 15:14:27 org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3597) AbstractEntityPersister.java DEBUG  Version select: select userId from user where userId =?
2016-11-09 15:14:27 org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3600) AbstractEntityPersister.java DEBUG  Snapshot select: select user_.userId, user_.userName as userName2_0_, user_.userPwd as userPwd3_0_, user_.isAdmin as isAdmin4_0_ from user user_ where user_.userId=?
2016-11-09 15:14:27 org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3603) AbstractEntityPersister.java DEBUG  Insert 0: insert into user (userName, userPwd, isAdmin, userId) values (?, ?, ?, ?)
2016-11-09 15:14:27 org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3604) AbstractEntityPersister.java DEBUG  Update 0: update user set userName=?, userPwd=?, isAdmin=? where userId=?
2016-11-09 15:14:27 org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3605) AbstractEntityPersister.java DEBUG  Delete 0: delete from user where userId=?
2016-11-09 15:14:27 org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) EntityLoader.java DEBUG Static select for entity edu.tsinghua.entity.User [NONE]: select user0_.userId as userId1_0_0_, user0_.userName as userName2_0_0_, user0_.userPwd as userPwd3_0_0_, user0_.isAdmin as isAdmin4_0_0_ from user user0_ where user0_.userId=?
2016-11-09 15:14:27 org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) EntityLoader.java DEBUG Static select for entity edu.tsinghua.entity.User [READ]: select user0_.userId as userId1_0_0_, user0_.userName as userName2_0_0_, user0_.userPwd as userPwd3_0_0_, user0_.isAdmin as isAdmin4_0_0_ from user user0_ where user0_.userId=?
2016-11-09 15:14:27 org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) EntityLoader.java DEBUG Static select for entity edu.tsinghua.entity.User [UPGRADE]: select user0_.userId as userId1_0_0_, user0_.userName as userName2_0_0_, user0_.userPwd as userPwd3_0_0_, user0_.isAdmin as isAdmin4_0_0_ from user user0_ where user0_.userId=? for update
2016-11-09 15:14:27 org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) EntityLoader.java DEBUG Static select for entity edu.tsinghua.entity.User [UPGRADE_NOWAIT]: select user0_.userId as userId1_0_0_, user0_.userName as userName2_0_0_, user0_.userPwd as userPwd3_0_0_, user0_.isAdmin as isAdmin4_0_0_ from user user0_ where user0_.userId=? for update
2016-11-09 15:14:27 org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) EntityLoader.java DEBUG Static select for entity edu.tsinghua.entity.User [FORCE]: select user0_.userId as userId1_0_0_, user0_.userName as userName2_0_0_, user0_.userPwd as userPwd3_0_0_, user0_.isAdmin as isAdmin4_0_0_ from user user0_ where user0_.userId=? for update
2016-11-09 15:14:27 org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) EntityLoader.java DEBUG Static select for entity edu.tsinghua.entity.User [PESSIMISTIC_READ]: select user0_.userId as userId1_0_0_, user0_.userName as userName2_0_0_, user0_.userPwd as userPwd3_0_0_, user0_.isAdmin as isAdmin4_0_0_ from user user0_ where user0_.userId=? lock in share mode
2016-11-09 15:14:27 org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) EntityLoader.java DEBUG Static select for entity edu.tsinghua.entity.User [PESSIMISTIC_WRITE]: select user0_.userId as userId1_0_0_, user0_.userName as userName2_0_0_, user0_.userPwd as userPwd3_0_0_, user0_.isAdmin as isAdmin4_0_0_ from user user0_ where user0_.userId=? for update
2016-11-09 15:14:27 org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) EntityLoader.java DEBUG Static select for entity edu.tsinghua.entity.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.userId as userId1_0_0_, user0_.userName as userName2_0_0_, user0_.userPwd as userPwd3_0_0_, user0_.isAdmin as isAdmin4_0_0_ from user user0_ where user0_.userId=? for update
2016-11-09 15:14:27 org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) EntityLoader.java DEBUG Static select for entity edu.tsinghua.entity.User [OPTIMISTIC]: select user0_.userId as userId1_0_0_, user0_.userName as userName2_0_0_, user0_.userPwd as userPwd3_0_0_, user0_.isAdmin as isAdmin4_0_0_ from user user0_ where user0_.userId=?
2016-11-09 15:14:27 org.hibernate.loader.entity.EntityLoader.<init>(EntityLoader.java:123) EntityLoader.java DEBUG Static select for entity edu.tsinghua.entity.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.userId as userId1_0_0_, user0_.userName as userName2_0_0_, user0_.userPwd as userPwd3_0_0_, user0_.isAdmin as isAdmin4_0_0_ from user user0_ where user0_.userId=?
2016-11-09 15:14:27 org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) CascadeEntityLoader.java DEBUG Static select for action ACTION_MERGE on entity edu.tsinghua.entity.User: select user0_.userId as userId1_0_0_, user0_.userName as userName2_0_0_, user0_.userPwd as userPwd3_0_0_, user0_.isAdmin as isAdmin4_0_0_ from user user0_ where user0_.userId=?
2016-11-09 15:14:27 org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:56) CascadeEntityLoader.java DEBUG Static select for action ACTION_REFRESH on entity edu.tsinghua.entity.User: select user0_.userId as userId1_0_0_, user0_.userName as userName2_0_0_, user0_.userPwd as userPwd3_0_0_, user0_.isAdmin as isAdmin4_0_0_ from user user0_ where user0_.userId=?
2016-11-09 15:14:27 org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:62) SessionFactoryRegistry.java DEBUG Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@10420b
2016-11-09 15:14:27 org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:75) SessionFactoryRegistry.java DEBUG Registering SessionFactory: 11b38ffa-25dd-400b-a07d-d174799e014a (<unnamed>)
2016-11-09 15:14:27 org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:82) SessionFactoryRegistry.java DEBUG Not binding SessionFactory to JNDI, no JNDI name configured
2016-11-09 15:14:27 org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:488) SessionFactoryImpl.java DEBUG Instantiated session factory
2016-11-09 15:14:27 org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1068) SessionFactoryImpl.java DEBUG Checking 0 named HQL queries
2016-11-09 15:14:27 org.hibernate.internal.SessionFactoryImpl.checkNamedQueries(SessionFactoryImpl.java:1091) SessionFactoryImpl.java DEBUG Checking 0 named SQL queries
2016-11-09 15:14:27 org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:110) StatisticsInitiator.java DEBUG Statistics initialized [enabled=false]
2016-11-09 15:14:27 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:460) AbstractAutowireCapableBeanFactory.java DEBUG Finished creating instance of bean 'sessionFactory'
2016-11-09 15:14:27 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:215) DefaultSingletonBeanRegistry.java DEBUG Creating shared instance of singleton bean 'userDao'
2016-11-09 15:14:27 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:432) AbstractAutowireCapableBeanFactory.java DEBUG Creating instance of bean 'userDao'
2016-11-09 15:14:27 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:506) AbstractAutowireCapableBeanFactory.java DEBUG Eagerly caching bean 'userDao' to allow for resolving potential circular references
2016-11-09 15:14:27 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) AbstractBeanFactory.java DEBUG Returning cached instance of singleton bean 'sessionFactory'
2016-11-09 15:14:27 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1150) AbstractAutowireCapableBeanFactory.java DEBUG Added autowiring by name from bean name 'userDao' via property 'sessionFactory' to bean named 'sessionFactory'
2016-11-09 15:14:27 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:460) AbstractAutowireCapableBeanFactory.java DEBUG Finished creating instance of bean 'userDao'
2016-11-09 15:14:27 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:215) DefaultSingletonBeanRegistry.java DEBUG Creating shared instance of singleton bean 'userBiz'
2016-11-09 15:14:27 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:432) AbstractAutowireCapableBeanFactory.java DEBUG Creating instance of bean 'userBiz'
2016-11-09 15:14:27 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:506) AbstractAutowireCapableBeanFactory.java DEBUG Eagerly caching bean 'userBiz' to allow for resolving potential circular references
2016-11-09 15:14:27 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) AbstractBeanFactory.java DEBUG Returning cached instance of singleton bean 'userDao'
2016-11-09 15:14:27 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1150) AbstractAutowireCapableBeanFactory.java DEBUG Added autowiring by name from bean name 'userBiz' via property 'userDao' to bean named 'userDao'
2016-11-09 15:14:27 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:460) AbstractAutowireCapableBeanFactory.java DEBUG Finished creating instance of bean 'userBiz'
2016-11-09 15:14:27 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:215) DefaultSingletonBeanRegistry.java DEBUG Creating shared instance of singleton bean 'loginAct'
2016-11-09 15:14:27 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:432) AbstractAutowireCapableBeanFactory.java DEBUG Creating instance of bean 'loginAct'
2016-11-09 15:14:27 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:506) AbstractAutowireCapableBeanFactory.java DEBUG Eagerly caching bean 'loginAct' to allow for resolving potential circular references
2016-11-09 15:14:27 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) AbstractBeanFactory.java DEBUG Returning cached instance of singleton bean 'userBiz'
2016-11-09 15:14:27 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByName(AbstractAutowireCapableBeanFactory.java:1150) AbstractAutowireCapableBeanFactory.java DEBUG Added autowiring by name from bean name 'loginAct' via property 'userBiz' to bean named 'userBiz'
2016-11-09 15:14:27 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:460) AbstractAutowireCapableBeanFactory.java DEBUG Finished creating instance of bean 'loginAct'
2016-11-09 15:14:27 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:215) DefaultSingletonBeanRegistry.java DEBUG Creating shared instance of singleton bean 'biz'
2016-11-09 15:14:27 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:432) AbstractAutowireCapableBeanFactory.java DEBUG Creating instance of bean 'biz'
2016-11-09 15:14:27 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:506) AbstractAutowireCapableBeanFactory.java DEBUG Eagerly caching bean 'biz' to allow for resolving potential circular references
2016-11-09 15:14:27 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:460) AbstractAutowireCapableBeanFactory.java DEBUG Finished creating instance of bean 'biz'
2016-11-09 15:14:27 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:215) DefaultSingletonBeanRegistry.java DEBUG Creating shared instance of singleton bean 'loggerAdvice'
2016-11-09 15:14:27 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:432) AbstractAutowireCapableBeanFactory.java DEBUG Creating instance of bean 'loggerAdvice'
2016-11-09 15:14:27 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:506) AbstractAutowireCapableBeanFactory.java DEBUG Eagerly caching bean 'loggerAdvice' to allow for resolving potential circular references
2016-11-09 15:14:27 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:460) AbstractAutowireCapableBeanFactory.java DEBUG Finished creating instance of bean 'loggerAdvice'
2016-11-09 15:14:27 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:215) DefaultSingletonBeanRegistry.java DEBUG Creating shared instance of singleton bean 'zhenghe'
2016-11-09 15:14:27 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:432) AbstractAutowireCapableBeanFactory.java DEBUG Creating instance of bean 'zhenghe'
2016-11-09 15:14:27 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:506) AbstractAutowireCapableBeanFactory.java DEBUG Eagerly caching bean 'zhenghe' to allow for resolving potential circular references
2016-11-09 15:14:27 org.springframework.aop.framework.ProxyFactoryBean.adviceChanged(ProxyFactoryBean.java:601) ProxyFactoryBean.java DEBUG Advice has changed; recaching singleton instance
2016-11-09 15:14:27 org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:460) AbstractAutowireCapableBeanFactory.java DEBUG Finished creating instance of bean 'zhenghe'
2016-11-09 15:14:27 org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(AbstractApplicationContext.java:858) AbstractApplicationContext.java DEBUG Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@28e5a7]
2016-11-09 15:14:27 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) AbstractBeanFactory.java DEBUG Returning cached instance of singleton bean 'lifecycleProcessor'
2016-11-09 15:14:27 org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:72) PropertySourcesPropertyResolver.java DEBUG Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
2016-11-09 15:14:27 org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:72) PropertySourcesPropertyResolver.java DEBUG Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
2016-11-09 15:14:27 org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(PropertySourcesPropertyResolver.java:94) PropertySourcesPropertyResolver.java DEBUG Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
2016-11-09 15:14:27 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) AbstractBeanFactory.java DEBUG Returning cached instance of singleton bean 'zhenghe'
2016-11-09 15:14:27 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) AbstractBeanFactory.java DEBUG Returning cached instance of singleton bean 'loggerAdvice'
2016-11-09 15:14:27 org.springframework.aop.framework.ProxyFactoryBean.adviceChanged(ProxyFactoryBean.java:601) ProxyFactoryBean.java DEBUG Advice has changed; recaching singleton instance
2016-11-09 15:14:27 org.springframework.aop.framework.ProxyFactoryBean.freshTargetSource(ProxyFactoryBean.java:570) ProxyFactoryBean.java DEBUG Refreshing target with name 'biz'
2016-11-09 15:14:27 org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:246) AbstractBeanFactory.java DEBUG Returning cached instance of singleton bean 'biz'
2016-11-09 15:14:27 org.springframework.aop.framework.JdkDynamicAopProxy.getProxy(JdkDynamicAopProxy.java:115) JdkDynamicAopProxy.java DEBUG Creating JDK dynamic proxy: target source is SingletonTargetSource for target object [edu.tsinghua.aop.Biz@12e827b]
2016-11-09 15:14:27 edu.tsinghua.aop.LoggerAdvice.before(LoggerAdvice.java:17) LoggerAdvice.java DEBUG 准备调用方法
2016-11-09 15:14:27 edu.tsinghua.aop.LoggerAdvice.before(LoggerAdvice.java:18) LoggerAdvice.java DEBUG 执行方法
